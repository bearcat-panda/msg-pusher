// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: meta.proto

package meta

import (
	"fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	_ "github.com/gogo/protobuf/gogoproto"

	io "io"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PlatForm int32

const (
	PlatForm_Unknown PlatForm = 0
	PlatForm_Back    PlatForm = 1
	PlatForm_Front   PlatForm = 2
	PlatForm_IOS     PlatForm = 3
	PlatForm_Android PlatForm = 4
	PlatForm_NewSys  PlatForm = 5
)

var PlatForm_name = map[int32]string{
	0: "PlatForm_Unknown",
	1: "PlatForm_Back",
	2: "PlatForm_Front",
	3: "PlatForm_IOS",
	4: "PlatForm_Android",
	5: "PlatForm_NewSys",
}
var PlatForm_value = map[string]int32{
	"PlatForm_Unknown": 0,
	"PlatForm_Back":    1,
	"PlatForm_Front":   2,
	"PlatForm_IOS":     3,
	"PlatForm_Android": 4,
	"PlatForm_NewSys":  5,
}

func (x PlatForm) String() string {
	return proto.EnumName(PlatForm_name, int32(x))
}
func (PlatForm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{0}
}

type Message int32

const (
	Message_Unknown Message = 0
	Message_Confirm Message = 1
	Message_Notice  Message = 2
)

var Message_name = map[int32]string{
	0: "Message_Unknown",
	1: "Message_Confirm",
	2: "Message_Notice",
}
var Message_value = map[string]int32{
	"Message_Unknown": 0,
	"Message_Confirm": 1,
	"Message_Notice":  2,
}

func (x Message) String() string {
	return proto.EnumName(Message_name, int32(x))
}
func (Message) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{1}
}

type SmsServer int32

const (
	SmsServer_Unknown SmsServer = 0
	SmsServer_Eay     SmsServer = 1
	SmsServer_Ali     SmsServer = 2
)

var SmsServer_name = map[int32]string{
	0: "SmsServer_Unknown",
	1: "SmsServer_Eay",
	2: "SmsServer_Ali",
}
var SmsServer_value = map[string]int32{
	"SmsServer_Unknown": 0,
	"SmsServer_Eay":     1,
	"SmsServer_Ali":     2,
}

func (x SmsServer) String() string {
	return proto.EnumName(SmsServer_name, int32(x))
}
func (SmsServer) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{2}
}

type EmailServer int32

const (
	EmailServer_Unknown EmailServer = 0
	EmailServer_Tencent EmailServer = 1
)

var EmailServer_name = map[int32]string{
	0: "EmailServer_Unknown",
	1: "EmailServer_Tencent",
}
var EmailServer_value = map[string]int32{
	"EmailServer_Unknown": 0,
	"EmailServer_Tencent": 1,
}

func (x EmailServer) String() string {
	return proto.EnumName(EmailServer_name, int32(x))
}
func (EmailServer) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{3}
}

type Status int32

const (
	Status_Unknown Status = 0
	Status_Wait    Status = 1
	Status_Cancel  Status = 2
	Status_Final   Status = 3
	// 批量完成
	Status_LotFinal Status = 4
)

var Status_name = map[int32]string{
	0: "Status_Unknown",
	1: "Status_Wait",
	2: "Status_Cancel",
	3: "Status_Final",
	4: "Status_LotFinal",
}
var Status_value = map[string]int32{
	"Status_Unknown":  0,
	"Status_Wait":     1,
	"Status_Cancel":   2,
	"Status_Final":    3,
	"Status_LotFinal": 4,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{4}
}

type Result int32

const (
	Result_Unknown Result = 0
	Result_Success Result = 1
	Result_Fail    Result = 2
)

var Result_name = map[int32]string{
	0: "Result_Unknown",
	1: "Result_Success",
	2: "Result_Fail",
}
var Result_value = map[string]int32{
	"Result_Unknown": 0,
	"Result_Success": 1,
	"Result_Fail":    2,
}

func (x Result) String() string {
	return proto.EnumName(Result_name, int32(x))
}
func (Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{5}
}

// "platform":3,
// "platform_key":"message_test",
// "server":2,
// "tpl": "SMS_130990029",
// "arguments":"{\"code\":885588}",
// "mobile": "18516051096",
// "send_time":"2018-07-30T07:30:00+08:00",
// "type": 2
// SmsProducer 接收短信消息
type SmsProducer struct {
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform int32  `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// @inject_tag: json:"platform_key,omitempty"
	PlatformKey string `protobuf:"bytes,3,opt,name=platformKey,proto3" json:"platform_key,omitempty"`
	Server      int32  `protobuf:"varint,4,opt,name=server,proto3" json:"server,omitempty"`
	Template    string `protobuf:"bytes,5,opt,name=template,proto3" json:"template,omitempty"`
	Arguments   string `protobuf:"bytes,6,opt,name=arguments,proto3" json:"arguments,omitempty"`
	Mobile      string `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`
	// @inject_tag: json:"send_time,omitempty"
	SendTime string `protobuf:"bytes,8,opt,name=sendTime,proto3" json:"send_time,omitempty"`
	// @inject_tag: json:"-"
	XUtcSendStamp        int64    `protobuf:"varint,9,opt,name=_utcSendStamp,json=UtcSendStamp,proto3" json:"-"`
	Type                 int32    `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmsProducer) Reset()         { *m = SmsProducer{} }
func (m *SmsProducer) String() string { return proto.CompactTextString(m) }
func (*SmsProducer) ProtoMessage()    {}
func (*SmsProducer) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{0}
}
func (m *SmsProducer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SmsProducer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SmsProducer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SmsProducer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmsProducer.Merge(dst, src)
}
func (m *SmsProducer) XXX_Size() int {
	return m.Size()
}
func (m *SmsProducer) XXX_DiscardUnknown() {
	xxx_messageInfo_SmsProducer.DiscardUnknown(m)
}

var xxx_messageInfo_SmsProducer proto.InternalMessageInfo

func (m *SmsProducer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SmsProducer) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *SmsProducer) GetPlatformKey() string {
	if m != nil {
		return m.PlatformKey
	}
	return ""
}

func (m *SmsProducer) GetServer() int32 {
	if m != nil {
		return m.Server
	}
	return 0
}

func (m *SmsProducer) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *SmsProducer) GetArguments() string {
	if m != nil {
		return m.Arguments
	}
	return ""
}

func (m *SmsProducer) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *SmsProducer) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *SmsProducer) GetXUtcSendStamp() int64 {
	if m != nil {
		return m.XUtcSendStamp
	}
	return 0
}

func (m *SmsProducer) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type SmsProducers struct {
	Platform             int32          `protobuf:"varint,1,opt,name=platform,proto3" json:"platform,omitempty"`
	Data                 []*SmsProducer `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SmsProducers) Reset()         { *m = SmsProducers{} }
func (m *SmsProducers) String() string { return proto.CompactTextString(m) }
func (*SmsProducers) ProtoMessage()    {}
func (*SmsProducers) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{1}
}
func (m *SmsProducers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SmsProducers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SmsProducers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SmsProducers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmsProducers.Merge(dst, src)
}
func (m *SmsProducers) XXX_Size() int {
	return m.Size()
}
func (m *SmsProducers) XXX_DiscardUnknown() {
	xxx_messageInfo_SmsProducers.DiscardUnknown(m)
}

var xxx_messageInfo_SmsProducers proto.InternalMessageInfo

func (m *SmsProducers) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *SmsProducers) GetData() []*SmsProducer {
	if m != nil {
		return m.Data
	}
	return nil
}

type DbSms struct {
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform int32  `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// @inject_tag: json:"platform_key,omitempty" db:"platform_key"
	PlatformKey string `protobuf:"bytes,3,opt,name=platformKey,proto3" json:"platform_key,omitempty" db:"platform_key"`
	Content     string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Mobile      string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Type        int32  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Template    string `protobuf:"bytes,7,opt,name=template,proto3" json:"template,omitempty"`
	Arguments   string `protobuf:"bytes,8,opt,name=arguments,proto3" json:"arguments,omitempty"`
	Server      int32  `protobuf:"varint,9,opt,name=server,proto3" json:"server,omitempty"`
	// @inject_tag: json:"send_time,omitempty" db:"send_time"
	SendTime string `protobuf:"bytes,10,opt,name=sendTime,proto3" json:"send_time,omitempty" db:"send_time"`
	// @inject_tag: json:"try_num,omitempty" db:"try_num"
	TryNum int32 `protobuf:"varint,11,opt,name=tryNum,proto3" json:"try_num,omitempty" db:"try_num"`
	Status int32 `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"result_status,omitempty" db:"result_status"
	ResultStatus int32  `protobuf:"varint,13,opt,name=resultStatus,proto3" json:"result_status,omitempty" db:"result_status"`
	Reason       string `protobuf:"bytes,14,opt,name=reason,proto3" json:"reason,omitempty"`
	// @inject_tag: json:"created_at,omitempty" db:"created_at"
	CreatedAt string `protobuf:"bytes,15,opt,name=createdAt,proto3" json:"created_at,omitempty" db:"created_at"`
	// @inject_tag: json:"updated_at,omitempty" db:"updated_at"
	UpdatedAt            string   `protobuf:"bytes,16,opt,name=updatedAt,proto3" json:"updated_at,omitempty" db:"updated_at"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbSms) Reset()         { *m = DbSms{} }
func (m *DbSms) String() string { return proto.CompactTextString(m) }
func (*DbSms) ProtoMessage()    {}
func (*DbSms) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{2}
}
func (m *DbSms) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbSms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbSms.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DbSms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbSms.Merge(dst, src)
}
func (m *DbSms) XXX_Size() int {
	return m.Size()
}
func (m *DbSms) XXX_DiscardUnknown() {
	xxx_messageInfo_DbSms.DiscardUnknown(m)
}

var xxx_messageInfo_DbSms proto.InternalMessageInfo

func (m *DbSms) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DbSms) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *DbSms) GetPlatformKey() string {
	if m != nil {
		return m.PlatformKey
	}
	return ""
}

func (m *DbSms) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *DbSms) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *DbSms) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DbSms) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *DbSms) GetArguments() string {
	if m != nil {
		return m.Arguments
	}
	return ""
}

func (m *DbSms) GetServer() int32 {
	if m != nil {
		return m.Server
	}
	return 0
}

func (m *DbSms) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *DbSms) GetTryNum() int32 {
	if m != nil {
		return m.TryNum
	}
	return 0
}

func (m *DbSms) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DbSms) GetResultStatus() int32 {
	if m != nil {
		return m.ResultStatus
	}
	return 0
}

func (m *DbSms) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *DbSms) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *DbSms) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

// "platform":3,
// "platform_key":"email_test",
// "server":2,
// "title":"测试邮件",
// "tpl": "test.blade.php",
// "arguments":"{\"name\":\"乔治君\"}",
// "destination": "923143925@qq.com",
// "send_time":"2018-07-30T07:30:00+08:00",
// "type": 2
// EmailProducer 接收email信息
type EmailProducer struct {
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform int32  `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// @inject_tag: json:"platform_key,omitempty"
	PlatformKey string `protobuf:"bytes,3,opt,name=platformKey,proto3" json:"platform_key,omitempty"`
	Server      int32  `protobuf:"varint,4,opt,name=server,proto3" json:"server,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Template    string `protobuf:"bytes,6,opt,name=template,proto3" json:"template,omitempty"`
	Arguments   string `protobuf:"bytes,7,opt,name=arguments,proto3" json:"arguments,omitempty"`
	Destination string `protobuf:"bytes,8,opt,name=destination,proto3" json:"destination,omitempty"`
	// @inject_tag: json:"send_time,omitempty"
	SendTime string `protobuf:"bytes,9,opt,name=sendTime,proto3" json:"send_time,omitempty"`
	// @inject_tag: json:"-"
	XUtcSendStamp        int64    `protobuf:"varint,10,opt,name=_utcSendStamp,json=UtcSendStamp,proto3" json:"-"`
	Type                 int32    `protobuf:"varint,11,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailProducer) Reset()         { *m = EmailProducer{} }
func (m *EmailProducer) String() string { return proto.CompactTextString(m) }
func (*EmailProducer) ProtoMessage()    {}
func (*EmailProducer) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{3}
}
func (m *EmailProducer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmailProducer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmailProducer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *EmailProducer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailProducer.Merge(dst, src)
}
func (m *EmailProducer) XXX_Size() int {
	return m.Size()
}
func (m *EmailProducer) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailProducer.DiscardUnknown(m)
}

var xxx_messageInfo_EmailProducer proto.InternalMessageInfo

func (m *EmailProducer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EmailProducer) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *EmailProducer) GetPlatformKey() string {
	if m != nil {
		return m.PlatformKey
	}
	return ""
}

func (m *EmailProducer) GetServer() int32 {
	if m != nil {
		return m.Server
	}
	return 0
}

func (m *EmailProducer) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *EmailProducer) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *EmailProducer) GetArguments() string {
	if m != nil {
		return m.Arguments
	}
	return ""
}

func (m *EmailProducer) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *EmailProducer) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *EmailProducer) GetXUtcSendStamp() int64 {
	if m != nil {
		return m.XUtcSendStamp
	}
	return 0
}

func (m *EmailProducer) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type DbEmail struct {
	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform int32  `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// @inject_tag: json:"platform_key,omitempty" db:"platform_key"
	PlatformKey string `protobuf:"bytes,3,opt,name=platformKey,proto3" json:"platform_key,omitempty" db:"platform_key"`
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content     string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Destination string `protobuf:"bytes,6,opt,name=destination,proto3" json:"destination,omitempty"`
	Type        int32  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Template    string `protobuf:"bytes,8,opt,name=template,proto3" json:"template,omitempty"`
	Arguments   string `protobuf:"bytes,9,opt,name=arguments,proto3" json:"arguments,omitempty"`
	Server      int32  `protobuf:"varint,10,opt,name=server,proto3" json:"server,omitempty"`
	// @inject_tag: json:"send_time,omitempty" db:"send_time"
	SendTime string `protobuf:"bytes,11,opt,name=sendTime,proto3" json:"send_time,omitempty" db:"send_time"`
	// @inject_tag: json:"try_num,omitempty" db:"try_num"
	TryNum int32 `protobuf:"varint,12,opt,name=tryNum,proto3" json:"try_num,omitempty" db:"try_num"`
	Status int32 `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"result_status,omitempty" db:"result_status"
	ResultStatus int32  `protobuf:"varint,14,opt,name=resultStatus,proto3" json:"result_status,omitempty" db:"result_status"`
	Reason       string `protobuf:"bytes,15,opt,name=reason,proto3" json:"reason,omitempty"`
	// @inject_tag: json:"created_at,omitempty" db:"created_at"
	CreatedAt string `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"created_at,omitempty" db:"created_at"`
	// @inject_tag: json:"updated_at,omitempty" db:"updated_at"
	UpdatedAt            string   `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updated_at,omitempty" db:"updated_at"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbEmail) Reset()         { *m = DbEmail{} }
func (m *DbEmail) String() string { return proto.CompactTextString(m) }
func (*DbEmail) ProtoMessage()    {}
func (*DbEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{4}
}
func (m *DbEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DbEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbEmail.Merge(dst, src)
}
func (m *DbEmail) XXX_Size() int {
	return m.Size()
}
func (m *DbEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_DbEmail.DiscardUnknown(m)
}

var xxx_messageInfo_DbEmail proto.InternalMessageInfo

func (m *DbEmail) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DbEmail) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *DbEmail) GetPlatformKey() string {
	if m != nil {
		return m.PlatformKey
	}
	return ""
}

func (m *DbEmail) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DbEmail) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *DbEmail) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *DbEmail) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DbEmail) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *DbEmail) GetArguments() string {
	if m != nil {
		return m.Arguments
	}
	return ""
}

func (m *DbEmail) GetServer() int32 {
	if m != nil {
		return m.Server
	}
	return 0
}

func (m *DbEmail) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *DbEmail) GetTryNum() int32 {
	if m != nil {
		return m.TryNum
	}
	return 0
}

func (m *DbEmail) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DbEmail) GetResultStatus() int32 {
	if m != nil {
		return m.ResultStatus
	}
	return 0
}

func (m *DbEmail) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *DbEmail) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *DbEmail) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

// "platform":3,
// "touser": "oAdVsv5nQ-qtBF0F5WGU-xPcrpGY",
// "template_id": "RlJfVX1SCBW2ncbIblbOE_8PaOUyoxBmr2MKnjzcY80",
// "url": "",
// "data":"{\"first\": {\"value\":\"亲爱的George家长，UU哥提示您：本次课程已经结束，本节课配有课后作业哦，作业信息如下：\",\"color\":\"#173177\"},\"keyword1\":{\"value\":\"Hello\",\"color\":\"#173177\"},\"keyword2\": {\"value\":\"World\",\"color\":\"#173177\"},\"remark\":{\"value\":\"请提醒小朋友前往学习记录完成课后作业，完成作业还会有额外奖励哦。。如有任何问题可微信对话框留言或拨打服务热线：4001636161\",\"color\":\"#173177\"}}",
// "send_time":"0",
// "type": 2
// WeChatProducer 接收微信消息
type WeChatProducer struct {
	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform  int32  `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Touser    string `protobuf:"bytes,3,opt,name=touser,proto3" json:"touser,omitempty"`
	Template  string `protobuf:"bytes,4,opt,name=template,proto3" json:"template,omitempty"`
	Url       string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Arguments string `protobuf:"bytes,6,opt,name=arguments,proto3" json:"arguments,omitempty"`
	// @inject_tag: json:"send_time,omitempty"
	SendTime string `protobuf:"bytes,7,opt,name=sendTime,proto3" json:"send_time,omitempty"`
	// @inject_tag: json:"-"
	XUtcSendStamp        int64    `protobuf:"varint,8,opt,name=_utcSendStamp,json=UtcSendStamp,proto3" json:"-"`
	Type                 int32    `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeChatProducer) Reset()         { *m = WeChatProducer{} }
func (m *WeChatProducer) String() string { return proto.CompactTextString(m) }
func (*WeChatProducer) ProtoMessage()    {}
func (*WeChatProducer) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{5}
}
func (m *WeChatProducer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WeChatProducer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WeChatProducer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WeChatProducer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeChatProducer.Merge(dst, src)
}
func (m *WeChatProducer) XXX_Size() int {
	return m.Size()
}
func (m *WeChatProducer) XXX_DiscardUnknown() {
	xxx_messageInfo_WeChatProducer.DiscardUnknown(m)
}

var xxx_messageInfo_WeChatProducer proto.InternalMessageInfo

func (m *WeChatProducer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WeChatProducer) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *WeChatProducer) GetTouser() string {
	if m != nil {
		return m.Touser
	}
	return ""
}

func (m *WeChatProducer) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *WeChatProducer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *WeChatProducer) GetArguments() string {
	if m != nil {
		return m.Arguments
	}
	return ""
}

func (m *WeChatProducer) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *WeChatProducer) GetXUtcSendStamp() int64 {
	if m != nil {
		return m.XUtcSendStamp
	}
	return 0
}

func (m *WeChatProducer) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type DbWeChat struct {
	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform  int32  `protobuf:"varint,2,opt,name=platform,proto3" json:"platform,omitempty"`
	Touser    string `protobuf:"bytes,3,opt,name=touser,proto3" json:"touser,omitempty"`
	Type      int32  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Template  string `protobuf:"bytes,5,opt,name=template,proto3" json:"template,omitempty"`
	Url       string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Content   string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Arguments string `protobuf:"bytes,8,opt,name=arguments,proto3" json:"arguments,omitempty"`
	// @inject_tag: json:"send_time,omitempty" db:"send_time"
	SendTime string `protobuf:"bytes,9,opt,name=sendTime,proto3" json:"send_time,omitempty" db:"send_time"`
	// @inject_tag: json:"try_num,omitempty" db:"try_num"
	TryNum int32 `protobuf:"varint,10,opt,name=tryNum,proto3" json:"try_num,omitempty" db:"try_num"`
	Status int32 `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: json:"result_status,omitempty" db:"result_status"
	ResultStatus int32  `protobuf:"varint,12,opt,name=resultStatus,proto3" json:"result_status,omitempty" db:"result_status"`
	Reason       string `protobuf:"bytes,13,opt,name=reason,proto3" json:"reason,omitempty"`
	// @inject_tag: json:"created_at,omitempty" db:"created_at"
	CreatedAt string `protobuf:"bytes,14,opt,name=createdAt,proto3" json:"created_at,omitempty" db:"created_at"`
	// @inject_tag: json:"updated_at,omitempty" db:"updated_at"
	UpdatedAt            string   `protobuf:"bytes,15,opt,name=updatedAt,proto3" json:"updated_at,omitempty" db:"updated_at"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbWeChat) Reset()         { *m = DbWeChat{} }
func (m *DbWeChat) String() string { return proto.CompactTextString(m) }
func (*DbWeChat) ProtoMessage()    {}
func (*DbWeChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_6cdb52b11ea43a5e, []int{6}
}
func (m *DbWeChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DbWeChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DbWeChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DbWeChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbWeChat.Merge(dst, src)
}
func (m *DbWeChat) XXX_Size() int {
	return m.Size()
}
func (m *DbWeChat) XXX_DiscardUnknown() {
	xxx_messageInfo_DbWeChat.DiscardUnknown(m)
}

var xxx_messageInfo_DbWeChat proto.InternalMessageInfo

func (m *DbWeChat) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DbWeChat) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *DbWeChat) GetTouser() string {
	if m != nil {
		return m.Touser
	}
	return ""
}

func (m *DbWeChat) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DbWeChat) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *DbWeChat) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *DbWeChat) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *DbWeChat) GetArguments() string {
	if m != nil {
		return m.Arguments
	}
	return ""
}

func (m *DbWeChat) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *DbWeChat) GetTryNum() int32 {
	if m != nil {
		return m.TryNum
	}
	return 0
}

func (m *DbWeChat) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DbWeChat) GetResultStatus() int32 {
	if m != nil {
		return m.ResultStatus
	}
	return 0
}

func (m *DbWeChat) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *DbWeChat) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *DbWeChat) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func init() {
	proto.RegisterType((*SmsProducer)(nil), "meta.SmsProducer")
	proto.RegisterType((*SmsProducers)(nil), "meta.SmsProducers")
	proto.RegisterType((*DbSms)(nil), "meta.DbSms")
	proto.RegisterType((*EmailProducer)(nil), "meta.EmailProducer")
	proto.RegisterType((*DbEmail)(nil), "meta.DbEmail")
	proto.RegisterType((*WeChatProducer)(nil), "meta.WeChatProducer")
	proto.RegisterType((*DbWeChat)(nil), "meta.DbWeChat")
	proto.RegisterEnum("meta.PlatForm", PlatForm_name, PlatForm_value)
	proto.RegisterEnum("meta.Message", Message_name, Message_value)
	proto.RegisterEnum("meta.SmsServer", SmsServer_name, SmsServer_value)
	proto.RegisterEnum("meta.EmailServer", EmailServer_name, EmailServer_value)
	proto.RegisterEnum("meta.Status", Status_name, Status_value)
	proto.RegisterEnum("meta.Result", Result_name, Result_value)
}
func (m *SmsProducer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SmsProducer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.Platform != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Platform))
	}
	if len(m.PlatformKey) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.PlatformKey)))
		i += copy(dAtA[i:], m.PlatformKey)
	}
	if m.Server != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Server))
	}
	if len(m.Template) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Template)))
		i += copy(dAtA[i:], m.Template)
	}
	if len(m.Arguments) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Arguments)))
		i += copy(dAtA[i:], m.Arguments)
	}
	if len(m.Mobile) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Mobile)))
		i += copy(dAtA[i:], m.Mobile)
	}
	if len(m.SendTime) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.SendTime)))
		i += copy(dAtA[i:], m.SendTime)
	}
	if m.XUtcSendStamp != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.XUtcSendStamp))
	}
	if m.Type != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SmsProducers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SmsProducers) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Platform != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Platform))
	}
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0x12
			i++
			i = encodeVarintMeta(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbSms) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbSms) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.Platform != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Platform))
	}
	if len(m.PlatformKey) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.PlatformKey)))
		i += copy(dAtA[i:], m.PlatformKey)
	}
	if len(m.Content) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Content)))
		i += copy(dAtA[i:], m.Content)
	}
	if len(m.Mobile) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Mobile)))
		i += copy(dAtA[i:], m.Mobile)
	}
	if m.Type != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Type))
	}
	if len(m.Template) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Template)))
		i += copy(dAtA[i:], m.Template)
	}
	if len(m.Arguments) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Arguments)))
		i += copy(dAtA[i:], m.Arguments)
	}
	if m.Server != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Server))
	}
	if len(m.SendTime) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.SendTime)))
		i += copy(dAtA[i:], m.SendTime)
	}
	if m.TryNum != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.TryNum))
	}
	if m.Status != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Status))
	}
	if m.ResultStatus != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.ResultStatus))
	}
	if len(m.Reason) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Reason)))
		i += copy(dAtA[i:], m.Reason)
	}
	if len(m.CreatedAt) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.CreatedAt)))
		i += copy(dAtA[i:], m.CreatedAt)
	}
	if len(m.UpdatedAt) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.UpdatedAt)))
		i += copy(dAtA[i:], m.UpdatedAt)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EmailProducer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmailProducer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.Platform != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Platform))
	}
	if len(m.PlatformKey) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.PlatformKey)))
		i += copy(dAtA[i:], m.PlatformKey)
	}
	if m.Server != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Server))
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.Template) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Template)))
		i += copy(dAtA[i:], m.Template)
	}
	if len(m.Arguments) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Arguments)))
		i += copy(dAtA[i:], m.Arguments)
	}
	if len(m.Destination) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Destination)))
		i += copy(dAtA[i:], m.Destination)
	}
	if len(m.SendTime) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.SendTime)))
		i += copy(dAtA[i:], m.SendTime)
	}
	if m.XUtcSendStamp != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.XUtcSendStamp))
	}
	if m.Type != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbEmail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.Platform != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Platform))
	}
	if len(m.PlatformKey) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.PlatformKey)))
		i += copy(dAtA[i:], m.PlatformKey)
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.Content) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Content)))
		i += copy(dAtA[i:], m.Content)
	}
	if len(m.Destination) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Destination)))
		i += copy(dAtA[i:], m.Destination)
	}
	if m.Type != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Type))
	}
	if len(m.Template) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Template)))
		i += copy(dAtA[i:], m.Template)
	}
	if len(m.Arguments) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Arguments)))
		i += copy(dAtA[i:], m.Arguments)
	}
	if m.Server != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Server))
	}
	if len(m.SendTime) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.SendTime)))
		i += copy(dAtA[i:], m.SendTime)
	}
	if m.TryNum != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.TryNum))
	}
	if m.Status != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Status))
	}
	if m.ResultStatus != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.ResultStatus))
	}
	if len(m.Reason) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Reason)))
		i += copy(dAtA[i:], m.Reason)
	}
	if len(m.CreatedAt) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.CreatedAt)))
		i += copy(dAtA[i:], m.CreatedAt)
	}
	if len(m.UpdatedAt) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.UpdatedAt)))
		i += copy(dAtA[i:], m.UpdatedAt)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WeChatProducer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WeChatProducer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.Platform != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Platform))
	}
	if len(m.Touser) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Touser)))
		i += copy(dAtA[i:], m.Touser)
	}
	if len(m.Template) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Template)))
		i += copy(dAtA[i:], m.Template)
	}
	if len(m.Url) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Url)))
		i += copy(dAtA[i:], m.Url)
	}
	if len(m.Arguments) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Arguments)))
		i += copy(dAtA[i:], m.Arguments)
	}
	if len(m.SendTime) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.SendTime)))
		i += copy(dAtA[i:], m.SendTime)
	}
	if m.XUtcSendStamp != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.XUtcSendStamp))
	}
	if m.Type != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DbWeChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DbWeChat) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.Platform != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Platform))
	}
	if len(m.Touser) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Touser)))
		i += copy(dAtA[i:], m.Touser)
	}
	if m.Type != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Type))
	}
	if len(m.Template) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Template)))
		i += copy(dAtA[i:], m.Template)
	}
	if len(m.Url) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Url)))
		i += copy(dAtA[i:], m.Url)
	}
	if len(m.Content) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Content)))
		i += copy(dAtA[i:], m.Content)
	}
	if len(m.Arguments) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Arguments)))
		i += copy(dAtA[i:], m.Arguments)
	}
	if len(m.SendTime) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.SendTime)))
		i += copy(dAtA[i:], m.SendTime)
	}
	if m.TryNum != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.TryNum))
	}
	if m.Status != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.Status))
	}
	if m.ResultStatus != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintMeta(dAtA, i, uint64(m.ResultStatus))
	}
	if len(m.Reason) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.Reason)))
		i += copy(dAtA[i:], m.Reason)
	}
	if len(m.CreatedAt) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.CreatedAt)))
		i += copy(dAtA[i:], m.CreatedAt)
	}
	if len(m.UpdatedAt) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintMeta(dAtA, i, uint64(len(m.UpdatedAt)))
		i += copy(dAtA[i:], m.UpdatedAt)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintMeta(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SmsProducer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Platform != 0 {
		n += 1 + sovMeta(uint64(m.Platform))
	}
	l = len(m.PlatformKey)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Server != 0 {
		n += 1 + sovMeta(uint64(m.Server))
	}
	l = len(m.Template)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Arguments)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.SendTime)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.XUtcSendStamp != 0 {
		n += 1 + sovMeta(uint64(m.XUtcSendStamp))
	}
	if m.Type != 0 {
		n += 1 + sovMeta(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SmsProducers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Platform != 0 {
		n += 1 + sovMeta(uint64(m.Platform))
	}
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovMeta(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbSms) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Platform != 0 {
		n += 1 + sovMeta(uint64(m.Platform))
	}
	l = len(m.PlatformKey)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovMeta(uint64(m.Type))
	}
	l = len(m.Template)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Arguments)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Server != 0 {
		n += 1 + sovMeta(uint64(m.Server))
	}
	l = len(m.SendTime)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.TryNum != 0 {
		n += 1 + sovMeta(uint64(m.TryNum))
	}
	if m.Status != 0 {
		n += 1 + sovMeta(uint64(m.Status))
	}
	if m.ResultStatus != 0 {
		n += 1 + sovMeta(uint64(m.ResultStatus))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 2 + l + sovMeta(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EmailProducer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Platform != 0 {
		n += 1 + sovMeta(uint64(m.Platform))
	}
	l = len(m.PlatformKey)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Server != 0 {
		n += 1 + sovMeta(uint64(m.Server))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Template)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Arguments)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Destination)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.SendTime)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.XUtcSendStamp != 0 {
		n += 1 + sovMeta(uint64(m.XUtcSendStamp))
	}
	if m.Type != 0 {
		n += 1 + sovMeta(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Platform != 0 {
		n += 1 + sovMeta(uint64(m.Platform))
	}
	l = len(m.PlatformKey)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Destination)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovMeta(uint64(m.Type))
	}
	l = len(m.Template)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Arguments)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Server != 0 {
		n += 1 + sovMeta(uint64(m.Server))
	}
	l = len(m.SendTime)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.TryNum != 0 {
		n += 1 + sovMeta(uint64(m.TryNum))
	}
	if m.Status != 0 {
		n += 1 + sovMeta(uint64(m.Status))
	}
	if m.ResultStatus != 0 {
		n += 1 + sovMeta(uint64(m.ResultStatus))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 2 + l + sovMeta(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 2 + l + sovMeta(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WeChatProducer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Platform != 0 {
		n += 1 + sovMeta(uint64(m.Platform))
	}
	l = len(m.Touser)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Template)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Arguments)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.SendTime)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.XUtcSendStamp != 0 {
		n += 1 + sovMeta(uint64(m.XUtcSendStamp))
	}
	if m.Type != 0 {
		n += 1 + sovMeta(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DbWeChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Platform != 0 {
		n += 1 + sovMeta(uint64(m.Platform))
	}
	l = len(m.Touser)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovMeta(uint64(m.Type))
	}
	l = len(m.Template)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.Arguments)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.SendTime)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.TryNum != 0 {
		n += 1 + sovMeta(uint64(m.TryNum))
	}
	if m.Status != 0 {
		n += 1 + sovMeta(uint64(m.Status))
	}
	if m.ResultStatus != 0 {
		n += 1 + sovMeta(uint64(m.ResultStatus))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 1 + l + sovMeta(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMeta(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozMeta(x uint64) (n int) {
	return sovMeta(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SmsProducer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SmsProducer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SmsProducer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlatformKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Server", wireType)
			}
			m.Server = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Server |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Template = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arguments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Arguments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SendTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field XUtcSendStamp", wireType)
			}
			m.XUtcSendStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.XUtcSendStamp |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMeta(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMeta
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SmsProducers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SmsProducers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SmsProducers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &SmsProducer{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMeta(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMeta
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbSms) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DbSms: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DbSms: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlatformKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Template = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arguments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Arguments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Server", wireType)
			}
			m.Server = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Server |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SendTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TryNum", wireType)
			}
			m.TryNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TryNum |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResultStatus", wireType)
			}
			m.ResultStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResultStatus |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMeta(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMeta
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EmailProducer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmailProducer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmailProducer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlatformKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Server", wireType)
			}
			m.Server = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Server |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Template = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arguments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Arguments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Destination = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SendTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field XUtcSendStamp", wireType)
			}
			m.XUtcSendStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.XUtcSendStamp |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMeta(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMeta
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DbEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DbEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlatformKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Destination", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Destination = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Template = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arguments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Arguments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Server", wireType)
			}
			m.Server = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Server |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SendTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TryNum", wireType)
			}
			m.TryNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TryNum |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResultStatus", wireType)
			}
			m.ResultStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResultStatus |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMeta(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMeta
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WeChatProducer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WeChatProducer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WeChatProducer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Touser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Touser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Template = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arguments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Arguments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SendTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field XUtcSendStamp", wireType)
			}
			m.XUtcSendStamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.XUtcSendStamp |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMeta(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMeta
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DbWeChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DbWeChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DbWeChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			m.Platform = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Platform |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Touser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Touser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Template = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arguments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Arguments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SendTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TryNum", wireType)
			}
			m.TryNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TryNum |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResultStatus", wireType)
			}
			m.ResultStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResultStatus |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMeta
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMeta(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthMeta
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMeta(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMeta
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMeta
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthMeta
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowMeta
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipMeta(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthMeta = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMeta   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("meta.proto", fileDescriptor_meta_6cdb52b11ea43a5e) }

var fileDescriptor_meta_6cdb52b11ea43a5e = []byte{
	// 893 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x5e, 0xff, 0xc4, 0x8e, 0x8f, 0xf3, 0x33, 0xeb, 0x2e, 0xc5, 0xaa, 0x50, 0x14, 0x05, 0x21,
	0xad, 0x72, 0x51, 0x24, 0x78, 0x00, 0xb4, 0xdd, 0x6d, 0x00, 0x01, 0x4b, 0x89, 0x5b, 0xf5, 0xb2,
	0x9a, 0xd8, 0xd3, 0x60, 0xd5, 0x1e, 0x47, 0xf6, 0x98, 0x2a, 0xf7, 0x5c, 0xf2, 0x00, 0x88, 0xb7,
	0xe0, 0x9e, 0x07, 0xe0, 0xb2, 0x12, 0x2f, 0x00, 0xcb, 0x33, 0x70, 0x8f, 0x3c, 0x33, 0x71, 0xc6,
	0xa6, 0xf6, 0x4a, 0x68, 0xd5, 0xbb, 0x73, 0xbe, 0xb3, 0x73, 0x66, 0xce, 0xf7, 0x9d, 0xcf, 0x1b,
	0x80, 0x94, 0x30, 0xfc, 0x70, 0x97, 0x67, 0x2c, 0xf3, 0xcc, 0x2a, 0x7e, 0x70, 0xb6, 0xcd, 0xb6,
	0x19, 0x07, 0x3e, 0xae, 0x22, 0x51, 0x5b, 0xfc, 0xa2, 0x83, 0x1b, 0xa4, 0xc5, 0x93, 0x3c, 0x8b,
	0xca, 0x90, 0xe4, 0xde, 0x04, 0xf4, 0x38, 0xf2, 0xb5, 0xb9, 0x76, 0xee, 0xac, 0xf5, 0x38, 0xf2,
	0x1e, 0xc0, 0x70, 0x97, 0x60, 0xf6, 0x32, 0xcb, 0x53, 0x5f, 0x9f, 0x6b, 0xe7, 0x83, 0x75, 0x9d,
	0x7b, 0x73, 0x70, 0x0f, 0xf1, 0x57, 0x64, 0xef, 0x1b, 0xfc, 0x90, 0x0a, 0x79, 0xf7, 0xc1, 0x2a,
	0x48, 0xfe, 0x03, 0xc9, 0x7d, 0x93, 0x9f, 0x95, 0x59, 0xd5, 0x95, 0x91, 0xb4, 0xfa, 0x4b, 0xe2,
	0x0f, 0xf8, 0xb1, 0x3a, 0xf7, 0x3e, 0x00, 0x07, 0xe7, 0xdb, 0x32, 0x25, 0x94, 0x15, 0xbe, 0xc5,
	0x8b, 0x47, 0xa0, 0xea, 0x98, 0x66, 0x9b, 0x38, 0x21, 0xbe, 0xcd, 0x4b, 0x32, 0xab, 0x3a, 0x16,
	0x84, 0x46, 0x4f, 0xe3, 0x94, 0xf8, 0x43, 0xd1, 0xf1, 0x90, 0x7b, 0x1f, 0xc2, 0xf8, 0x45, 0xc9,
	0xc2, 0x80, 0xd0, 0x28, 0x60, 0x38, 0xdd, 0xf9, 0xce, 0x5c, 0x3b, 0x37, 0xd6, 0xa3, 0x67, 0x0a,
	0xe6, 0x79, 0x60, 0xb2, 0xfd, 0x8e, 0xf8, 0xc0, 0x1f, 0xca, 0xe3, 0xc5, 0x77, 0x30, 0x52, 0xb8,
	0x29, 0x1a, 0x64, 0x68, 0x2d, 0x32, 0x3e, 0x02, 0x33, 0xc2, 0x0c, 0xfb, 0xfa, 0xdc, 0x38, 0x77,
	0x3f, 0x39, 0x7d, 0xc8, 0xf9, 0x57, 0x4e, 0xaf, 0x79, 0x79, 0xf1, 0xab, 0x01, 0x83, 0xab, 0x4d,
	0x90, 0x16, 0x77, 0xcc, 0xb4, 0x0f, 0x76, 0x98, 0x51, 0x46, 0x28, 0xe3, 0x54, 0x3b, 0xeb, 0x43,
	0xaa, 0x30, 0x36, 0x68, 0x30, 0x76, 0x18, 0xd8, 0x3a, 0x0e, 0xdc, 0xd0, 0xc5, 0xee, 0xd3, 0x65,
	0xf8, 0x16, 0x5d, 0xa4, 0xd2, 0x4e, 0x5b, 0xe9, 0x5a, 0x17, 0x68, 0xe9, 0x72, 0x1f, 0x2c, 0x96,
	0xef, 0xaf, 0xcb, 0xd4, 0x77, 0xc5, 0x19, 0x91, 0xf1, 0x5e, 0x0c, 0xb3, 0xb2, 0xf0, 0x47, 0xb2,
	0x17, 0xcf, 0xbc, 0x05, 0x8c, 0x72, 0x52, 0x94, 0x09, 0x0b, 0x44, 0x75, 0xcc, 0xab, 0x0d, 0xac,
	0x3a, 0x9b, 0x13, 0x5c, 0x64, 0xd4, 0x9f, 0x88, 0x69, 0x45, 0x56, 0xbd, 0x3e, 0xcc, 0x09, 0x66,
	0x24, 0xba, 0x60, 0xfe, 0x54, 0xbc, 0xbe, 0x06, 0xaa, 0x6a, 0xb9, 0x8b, 0x64, 0x15, 0x89, 0x6a,
	0x0d, 0x2c, 0x7e, 0xd3, 0x61, 0xfc, 0x38, 0xc5, 0x71, 0xf2, 0x8e, 0x5d, 0x72, 0x06, 0x03, 0x16,
	0xb3, 0x5a, 0x38, 0x91, 0x34, 0x34, 0xb2, 0xfa, 0x34, 0xb2, 0xdb, 0x1a, 0xcd, 0xc1, 0x8d, 0x48,
	0xc1, 0x62, 0x8a, 0x59, 0x9c, 0x51, 0xa9, 0xa1, 0x0a, 0x35, 0xd4, 0x72, 0x6e, 0x73, 0x11, 0xf4,
	0xb8, 0xc8, 0x55, 0x5c, 0xf4, 0x87, 0x01, 0xf6, 0xd5, 0x86, 0x13, 0x78, 0xc7, 0xc4, 0xd5, 0x04,
	0x99, 0x2a, 0x41, 0x8a, 0x15, 0x06, 0x4d, 0x2b, 0xb4, 0x08, 0xb0, 0xfe, 0x4b, 0xc0, 0xe1, 0xfd,
	0x76, 0x87, 0x29, 0x86, 0x7d, 0x84, 0x3b, 0xdd, 0xa6, 0x80, 0x4e, 0x53, 0xb8, 0x9d, 0xa6, 0x18,
	0x75, 0x98, 0x62, 0xdc, 0x6b, 0x8a, 0x49, 0xaf, 0x29, 0xa6, 0xdd, 0xa6, 0x40, 0xbd, 0xa6, 0x38,
	0x6d, 0x9b, 0xe2, 0x1f, 0x0d, 0x26, 0xcf, 0xc9, 0xe5, 0xf7, 0x98, 0xfd, 0x2f, 0x57, 0x54, 0x63,
	0x66, 0x65, 0x41, 0x72, 0xa9, 0xab, 0xcc, 0x1a, 0x64, 0x9b, 0x2d, 0xb2, 0x11, 0x18, 0x65, 0x9e,
	0x48, 0x51, 0xab, 0xf0, 0x96, 0xff, 0x15, 0x2a, 0xcd, 0xf6, 0x6d, 0xdb, 0x3c, 0xec, 0xd9, 0x66,
	0x47, 0xd9, 0xe6, 0x9f, 0x0c, 0x18, 0x5e, 0x6d, 0xc4, 0xe4, 0x77, 0x32, 0xf1, 0xe1, 0x12, 0xb3,
	0x63, 0xe5, 0x06, 0x6f, 0x67, 0xc1, 0x3a, 0xb2, 0xa0, 0x2c, 0xbc, 0xdd, 0x5c, 0xf8, 0xfe, 0x6f,
	0x76, 0x9f, 0xdb, 0x8f, 0x6b, 0x08, 0x1d, 0x6b, 0xe8, 0xf6, 0xae, 0xe1, 0xa8, 0x77, 0x0d, 0xc7,
	0xdd, 0x6b, 0x38, 0xe9, 0x5d, 0xc3, 0x69, 0x6b, 0x0d, 0x97, 0x3f, 0x6a, 0x30, 0x7c, 0x92, 0x60,
	0xb6, 0xaa, 0x28, 0x3e, 0x03, 0x74, 0x88, 0x5f, 0x3c, 0xa3, 0xaf, 0x68, 0xf6, 0x9a, 0xa2, 0x13,
	0xef, 0x14, 0xc6, 0x35, 0xfa, 0x08, 0x87, 0xaf, 0x90, 0xe6, 0x79, 0x30, 0xa9, 0xa1, 0x55, 0x9e,
	0x51, 0x86, 0x74, 0x0f, 0xc1, 0xa8, 0xc6, 0xbe, 0xfc, 0x36, 0x40, 0x46, 0xa3, 0xdd, 0x05, 0x8d,
	0xf2, 0x2c, 0x8e, 0x90, 0xe9, 0xdd, 0x83, 0x69, 0x8d, 0x5e, 0x93, 0xd7, 0xc1, 0xbe, 0x40, 0x83,
	0xe5, 0xe7, 0x60, 0x7f, 0x43, 0x8a, 0x02, 0x6f, 0x49, 0x55, 0x97, 0xa1, 0xf2, 0x06, 0x05, 0xbc,
	0xcc, 0xe8, 0xcb, 0x38, 0x4f, 0xc5, 0x2b, 0x0e, 0xe0, 0x75, 0xc6, 0xe2, 0x90, 0x20, 0x7d, 0xf9,
	0x05, 0x38, 0x41, 0x5a, 0x04, 0xe2, 0x3b, 0xf1, 0x1e, 0x9c, 0xd6, 0x49, 0x73, 0xa0, 0x23, 0xfc,
	0x18, 0xef, 0x91, 0xd6, 0x84, 0x2e, 0x92, 0x18, 0xe9, 0xcb, 0xcf, 0xc0, 0xe5, 0xdf, 0x5c, 0xd9,
	0xeb, 0x7d, 0xb8, 0xa7, 0xa4, 0x4a, 0xb7, 0x56, 0xe1, 0x29, 0xa1, 0x21, 0xa1, 0x0c, 0x69, 0xcb,
	0x2d, 0x58, 0x52, 0x38, 0x0f, 0x26, 0x22, 0x52, 0x8e, 0x4d, 0xc1, 0x95, 0xd8, 0x73, 0x1c, 0x33,
	0xf9, 0x04, 0x01, 0x5c, 0x62, 0x1a, 0x92, 0x44, 0x50, 0x2a, 0xa1, 0x55, 0x4c, 0x71, 0x82, 0x8c,
	0x8a, 0x07, 0x89, 0x7c, 0x9d, 0x31, 0x01, 0x9a, 0xcb, 0x0b, 0xb0, 0xd6, 0x7c, 0x4f, 0xaa, 0x8b,
	0x44, 0xa4, 0x5c, 0x74, 0xc4, 0x82, 0x32, 0x0c, 0x49, 0x51, 0x20, 0xad, 0xba, 0x5c, 0x62, 0x2b,
	0x1c, 0x27, 0x48, 0x7f, 0x74, 0xf6, 0xe6, 0xaf, 0xd9, 0xc9, 0xef, 0x37, 0x33, 0xed, 0xcd, 0xcd,
	0x4c, 0xfb, 0xf3, 0x66, 0xa6, 0xfd, 0xfc, 0xf7, 0xec, 0x64, 0x63, 0xf1, 0xdf, 0xb8, 0x9f, 0xfe,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0x73, 0x91, 0xbe, 0x93, 0x0d, 0x0b, 0x00, 0x00,
}
